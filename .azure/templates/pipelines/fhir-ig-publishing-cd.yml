# Name: fhir-ig-publish-cd
# Usage:


parameters:
  - name: name
    type: string
    default: "fhir_ig_publish"

  - name: repoName
    type: string

  - name: environments
    type: object

  - name: settings
    type: object


stages:
  - stage: build
    jobs:
      - template: /.azure/templates/jobs/fhir_ig_publisher.yml
        parameters:
          name: ${{ parameters.name }}
          repoName: ${{ parameters.repoName }} 
          ${{ if parameters.settings.publisherVersion }}:
            path: ${{ parameters.settings.path }}
          ${{ if parameters.settings.publisherVersion }}:
            publisherVersion: ${{ parameters.settings.publisherVersion }}
          ${{ if parameters.settings.javaVersion }}:
            javaVersion:  ${{ parameters.settings.javaVersion }}
          artifactName:  ${{ parameters.name }}

  - ${{ each environment in parameters.environments }}:
    - stage: ${{ environment.name }}
      dependsOn:
        - build
        - ${{ if environment.dependsOn }}:
          - ${{ environment.dependsOn }}
      jobs:
        - deployment: deploy
          environment: ${{ coalesce(environment.environment, format('{0}_{1}', parameters.name, environment.name) ) }}
          strategy:
            runOnce:
              deploy:
                steps:
                  - download: current
                    artifact: ${{ parameters.name }}
                  - template: /.azure/templates/steps/static_app_service_deploy.yml
                    parameters:
                      name: deploy
                      path: $(Pipeline.Workspace)/${{ parameters.name }}
                      webAppName: ${{ coalesce(environment.webAppName, format('{0}-{1}',coalesce(parameters.settings.webAppName,parameters.name), environment.name)) }}
                      webAppRegion: ${{ coalesce(environment.webAppRegion, 'westeurope') }}
                      azureSubscriptionName: ${{ coalesce(environment.azureSubscriptionName, parameters.settings.azureSubscriptionName) }}
                      authenticated: ${{ coalesce(environment.authenticated, true) }}
                        
              
            

