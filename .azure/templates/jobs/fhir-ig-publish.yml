# fhir-ig-publish-jobs.yml
#
# Description: 
#  

parameters:
  - name: name
    type: string
  - name: path
    type: string
    default: /
  - name: repoName
    type: string
  - name: publisherVersion
    type: string
    default: '1.1.125'
  - name: javaVersion
    type: string
    default: '11'
    values:
      - '9'
      - '11'
      - '17'

  - name: webAppName
    type: string
    
  - name: webAppRegion
    type: string
    default: westeurope
    
  - name: azureSubscriptionName
    type: string

  - name: authenticated
    type: boolean
    default: true


jobs:
  - job: ${{ parameters.name }}
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      - name: BUNDLE_PATH
        value: $(Pipeline.Workspace)/.bundle

      - name: sourceFolderPath
        value: $(Pipeline.Workspace)/igs${{ parameters.path }}
    steps: 
      
      ####################################################################################
      ####################################################################################
      ####################################################################################
      - checkout: ${{ parameters.repoName }}
        path: igs

      - task: NodeTool@0
        inputs:
          versionSpec: '12.x' 
      - script: |
          npm install -g fsh-sushi
        displayName: Install SUSHI

      ####################################################################################
      ####################################################################################
      ####################################################################################
      - task: JavaToolInstaller@0
        inputs:
          versionSpec: '${{ parameters.javaVersion }}'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'
      - task: UseRubyVersion@0
        inputs:
          versionSpec: '>= 2.5'
          addToPath: true

      - script: |
          gem install rails && rails -v
          gem install bundler
          gem install jekyll bundler
        displayName: 'Installing Jekyll'
        
      ####################################################################################
      ####################################################################################
      ####################################################################################
      - script: |
          curl -L -o $(pipeline.workspace)/publisher.jar https://github.com/HL7/fhir-ig-publisher/releases/download/${{ parameters.publisherVersion }}/publisher.jar
          java -Xmx4G -jar $(pipeline.workspace)/publisher.jar -ig $(sourceFolderPath) -destination $(Build.ArtifactStagingDirectory)
          ls $(Pipeline.Workspace)
          ls $(sourceFolderPath)/output
        displayName: "Install/Run FHIR IG Publisher - ${{ parameters.publisherVersion }}"

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: $(sourceFolderPath)/output
          artifactName: published
      
      - task: AzureCLI@2
        displayName: Publish To Web Site ${{ parameters.webAppName }}
        inputs:
          azureSubscription: ${{ parameters.azureSubscriptionName }}
          scriptType: pscore
          scriptLocation: inlineScript
          workingDirectory: $(sourceFolderPath)/output
          inlineScript: |
            $isAuthenticated = "${{ parameters.authenticated }}".ToLower() -eq "true"

            $webapp = az webapp up `
              --location ${{ parameters.webAppRegion }} `
              --name ${{ parameters.webAppName }} `
              --html | ConvertFrom-Json

            
            if($isAuthenticated){
              $app = az ad app create `
                        --display-name ${{ parameters.webAppName }} `
                        --web-redirect-uris https://${{ parameters.webAppName }}.azurewebsites.net/.auth/login/aad/callback `
                        --identifier-uris api://${{ parameters.webAppName }} | ConvertFrom-Json
              $creds = az ad app credential reset --id $($app.id) | ConvertFrom-Json
              $password = $creds.password
              $resourceGroup = $webapp.resourceGroup
              az webapp auth update --name ${{ parameters.webAppName }} --resource-group $resourceGroup --enabled true `
                  --action LoginWithAzureActiveDirectory `
                  --aad-allowed-token-audiences https://${{ parameters.webAppName }}.azurewebsites.net/.auth/login/aad/callback `
                  --aad-client-id $($app.appId) --aad-client-secret $password `
                  --aad-token-issuer-url https://login.microsoftonline.com/common/oauth2/v2.0/token
            }
            else{
                az webapp auth update --enabled false
            }
      

