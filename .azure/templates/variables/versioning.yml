# variables-version-semantic.yml
#
# Description: 
#   Variable template that is be included in the ADO analytics  building/publishing
#   to generate a Semantic Version for published images.
#
#   For Semantic Versioning details
#   see: https://semver.org
#
#   Notes:
#     Pre-release is not supported in this template due to not being supported by Azure Artifacts and other tools.

parameters: 
# The MAJOR value in Semantic Versioning. 
# Version when you make incompatible API changes.
# see: https://semver.org/#spec-item-4
- name: versionMajor
  type: number
# The pre-release version valus of Semantic Versioning.
# This values is set to '-beta' when builds are 
# run on non long running branches. i.e. not master.
# see: https://semver.org/#spec-item-9
- name: versionMinor
  type: number
    
# The pre-release version value of Semantic Versioning.
# This value is set to 'beta' by default which results
# in '-beta' when incorporated into the full Semantic Version.
# see: https://semver.org/#spec-item-9
- name: versionPreReleaseValue
  type: string
  default: 'beta'

# An object of long running trunk branches. Typically this might
# be a single branch such as refs/heads/master . However, multiple
# long running branches is supported such as refs/heads/dev, refs/heads/servicing, and so on.
# See example:
# parameters:
#   trunkBranches:
#   - refs/heads/master
#   - refs/heads/servicing
- name: trunkBranches
  type: object

variables:

# The patch version portion of Semantic Versioning.
# This values is automatically set.
# see: https://semver.org/#spec-item-6
- name: versionPatch
  value: $[counter(format('{0}.{1}', '${{ parameters.versionMajor }}', '${{ parameters.versionMinor }}'), 0)]

# The pre-release portion of Semantic Versioning.
# This values is used when builds are
# run on non long running branches. i.e. not any trunks.
# see: https://semver.org/#spec-item-9
- name: versionPreRelease
  ${{ if eq(containsValue(parameters.trunkBranches, variables['Build.SourceBranch']), true) }}:
      value: ''
  ${{ if eq(containsValue(parameters.trunkBranches, variables['Build.SourceBranch']), false) }}:
      value: '-${{ parameters.versionPreReleaseValue }}'

- name: versionSemanticBase
  value: $[format('{0}.{1}.{2}', '${{ parameters.versionMajor }}', '${{ parameters.versionMinor }}', variables['versionPatch'])]
- name: versionSemantic
  value: $[format('{0}.{1}.{2}{3}', '${{ parameters.versionMajor }}', '${{ parameters.versionMinor }}', variables['versionPatch'], variables['versionPreRelease'])]

