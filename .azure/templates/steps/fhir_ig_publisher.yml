parameters:
  - name: path
    type: string

  - name: version
    type: string
    
  - name: publisherVersion
    type: string
    default: '1.1.125'

  - name: javaVersion
    type: string
    default: '11'
    values:
      - '9'
      - '11'
      - '17'

  - name: artifactName
    type: string

steps:
  
  - powershell: |
      Write-Host "##vso[build.updatebuildnumber]${{ parameters.version }}"
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x' 
  - script: |
      npm install -g fsh-sushi
    displayName: Install SUSHI

  ####################################################################################
  ####################################################################################
  ####################################################################################
  - task: JavaToolInstaller@0
    displayName: Installing Java - ${{ parameters.javaVersion }}
    inputs:
      versionSpec: '${{ parameters.javaVersion }}'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  - task: UseRubyVersion@0
    inputs:
      versionSpec: '>= 2.5'
      addToPath: true

  - script: |
      gem install rails && rails -v
      gem install bundler
      gem install jekyll bundler
    displayName: 'Installing Jekyll'


  ####################################################################################
  ####################################################################################
  ####################################################################################
  - powershell: |
      
      curl -L -o $(pipeline.workspace)/publisher.jar https://github.com/HL7/fhir-ig-publisher/releases/download/${{ parameters.publisherVersion }}/publisher.jar

      New-Item -ItemType Directory -Path $(pipeline.workspace)/.home -Force
      $env:HOME = "$(pipeline.workspace)/.home"
      $env:USERPROFILE = "$(pipeline.workspace)/.home"
      $sushiFiles = $(Get-ChildItem -Path ${{ parameters.path }} -Include sushi-config.yaml -Recurse -Force).FullName
      foreach($sushiFile in $sushiFiles){

        $sushiContent = Get-Content -Path $sushiFile -Raw
        $sushiContent -replace "`nversion:.*","`nversion: ${{ parameters.version }}" | Set-Content -Path $sushiFile

        $rootDirectory = [System.IO.Path]::GetFullPath('${{ parameters.path }}')
        $directory = [System.IO.Path]::GetFullPath([System.IO.Path]::GetDirectoryName($sushiFile))
        $relativePath = $directory.Replace($rootDirectory,'')
        $relativePath = $relativePath -replace "^\/",""

        try{

          $command = @("pushd $rootDirectory")
          $command += "java -Xmx4G -jar $(pipeline.workspace)/publisher.jar -ig $relativePath"
          $command = $command -join "`n"
          Write-Host $command
          $command | Invoke-Expression
          New-Item -ItemType Directory -Path "$(pipeline.workspace)/.output/$($relativePath)" -Force
          Copy-Item -Path "$($directory)/output/*" -Destination "$(pipeline.workspace)/.output/$($relativePath)" -Force -Recurse
        }
        catch{
          throw $_.Exception
        }
        finally{
          popd
        }
      }
    displayName: "Run FHIR IG Publisher - ${{ parameters.publisherVersion }}"

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: $(pipeline.workspace)/.output
      artifactName: ${{ parameters.artifactName }}  